<% if !user_store.unique_store? %>
  <%
  data_controller = "new-user-store-modal"
  %>
  <%= render partial: "shared/modal",
      locals: {
        data_controller: "new-user-store-modal",
        modal_id: "modal",
        title_text: user_store.store_already_exists_modal[:title],
        body_text: user_store.store_already_exists_modal[:body],
        primary_button_text: user_store.store_already_exists_modal[:primary_button],
        secondary_button_text: user_store.store_already_exists_modal[:secondary_button]
      }
  %>
<% end %>
<div data-controller="zip-code">
  <main class="form form-user-store">
    <%= simple_form_for(user_store, url: user_stores_path, wrapper: :horizontal_form) do |f| %>
      <div class="h1 mb-3 fw-normal"><%= header_text %></div>

      <%= f.error_notification %>
      <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

      <%= f.simple_fields_for :store do |store_form| %>
        <%= store_form.error_notification message: store_form.object.errors[:base].to_sentence if store_form.object.errors[:base].present? %>
        <%= store_form.input :store_name,
                    label: "Name",
                    autofocus: true
        %>
        <%= store_form.input :address,
                    label: "Address"
        %>
        <%= store_form.input :address2,
                    label: "Address 2"
        %>
        <%= store_form.input :zip_code,
                    required: true,
                    input_html: {
                      data: {
                        "zip-code-target": "zipCode",
                        action: "blur->zip-code#fetchCityAndStateFromZipCode"
                      }
                    }
        %>
        <%= store_form.input :city,
                    input_html: {
                      data: {
                        "zip-code-target": "city"
                      }
                    }
        %>
        <%= store_form.association :state,
                          wrapper: :horizontal_form,
                          label_method: lambda { |state|
                            "#{state.state_name} (#{state.postal_abbreviation})"
                          },
                          prompt: "Select a state",
                          input_html: {
                            data: {
                              "zip-code-target": "state"
                            }
                          }
        %>
      <% end %>
      <div class="form-actions">
        <%= f.button :submit,
                    "Create store",
                     class: "btn btn-primary",
                     data: {
                      "zip-code-target": "submitButton"
                     }
        %>

        <div class="help-links marginized">
          <%= link_to "Back", back_path %>
        </div>
      </div>
    <% end %>
  </main>
</div>
